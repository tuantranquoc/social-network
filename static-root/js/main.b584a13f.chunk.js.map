{"version":3,"sources":["logo.svg","lookup/lookup_components.js","tweets/lookup.js","tweets/button.js","profile/profile_components.js","profile/utils.js","profile/badge.js","profile/lookup.js","tweets/detail.js","tweets/list.js","tweets/create.js","tweets/feed.js","tweets/tweet_components.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","console","log","xhr","XMLHttpRequest","url","open","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","setRequestHeader","responseType","onload","status","response","detail","window","location","href","indexOf","onerror","e","send","apiTweetList","username","nextUrl","replace","apiTweetFeed","ActionBtn","props","tweet","didPerformAction","action","likes","className","actionDisplay","display","handleActionBackendEvent","type","onClick","event","preventDefault","id","tweetId","apiTweetAction","UserLink","children","UserDisplay","user","includeFullName","hideLink","nameDisplay","first_name","last_name","Fragment","UserPicture","userIdSpan","DisplayCount","numeral","format","ProfileBadge","didFollowToggle","profileLoading","currentVerb","is_following","follower_count","following_count","bio","ProfileBadgeComponent","useState","didLookup","setDidLookUp","profile","setProfile","setProfileLoading","handleBackendLookUp","useEffect","apiProfileDetail","actionVerb","toLowerCase","apiProfileFollowToggle","_response","ParentTweet","parent","Tweet","hideActions","isReTweet","retweeter","didRetweet","actionTweet","setActionTweet","handlePerformAction","newActionTweet","path","pathname","idRegex","match","urlTweetId","groups","isDetail","content","TweetList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidCall","setTweetsDidCall","final","newTweet","concat","next","results","alert","handleDidRetweet","updateTweetInit","unshift","updateFinalTweetInit","map","item","index","key","TweetCreate","didTweet","textAreaRef","React","createRef","handleBackEndUpdate","onSubmit","newVal","current","value","ref","FeedList","TweetComponent","canTweet","newTweets","setNewTweet","tempNewTweet","TweetDetailComponent","setTweet","App","src","logo","alt","Boolean","hostname","getElementById","ReactDOM","render","StrictMode","createElement","tweetEl","dataset","tweetFeedEl","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b584a13f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","function getCookie(name) {\r\n    var cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        var cookies = document.cookie.split(';');\r\n        for (var i = 0; i < cookies.length; i++) {\r\n            var cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n    let jsonData;\r\n    if (data) {\r\n        jsonData = JSON.stringify(data);\r\n    }\r\n    console.log(\"jsonData\", jsonData);\r\n    // getting html elements\r\n    const xhr = new XMLHttpRequest();\r\n    // `http://localhost:8000/api${endpoint}`\r\n    const url = `http://localhost:8000/api${endpoint}`;\r\n    xhr.open(method, url);\r\n    const csrftoken = getCookie('csrftoken');\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n    if (csrftoken) {\r\n        xhr.setRequestHeader(\"X-CSRFToken\", csrftoken);\r\n    }\r\n\r\n\r\n    xhr.responseType = \"json\";\r\n    xhr.onload = function () {\r\n        if (xhr.status === 403){\r\n            const detail = xhr.response.detail;\r\n            if (detail === \"Authentication credentials are not provided\"){\r\n                if (window.location.href.indexOf(\"login\") === -1){\r\n                     window.location.href = \"/login?showLoginRequired=true\";\r\n                }\r\n            }\r\n        }\r\n        console.log(\"response\",xhr.response,xhr.status);\r\n        callback(xhr.response, xhr.status);\r\n    };\r\n    xhr.onerror = function (e) {\r\n        console.log(e);\r\n        callback({\"message\": \"the request was an error!\"}, 400)\r\n    };\r\n    xhr.send(jsonData);\r\n}\r\n\r\n\r\n","import {backendLookup} from \"../lookup/lookup_components\";\r\n\r\nexport function apiTweetCreate(newTweet, callback) {\r\n    const data = {content: newTweet};\r\n    backendLookup(\"POST\", \"/tweets/create/\", callback, data)\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action, callback) {\r\n    const data = {id: tweetId, action: action};\r\n    backendLookup(\"POST\", \"/tweets/action/\", callback, data)\r\n}\r\n\r\nexport function apiTweetDetail(tweet_id, callback) {\r\n    backendLookup(\"GET\", `/tweets/${tweet_id}/`, callback,)\r\n}\r\n\r\nexport function apiTweetList(username, callback,nextUrl) {\r\n    let endpoint = \"/tweets/\";\r\n     if (username) {\r\n         endpoint = `/tweets/?username=${username}`;\r\n     }\r\n     if (nextUrl){\r\n           endpoint = nextUrl.replace('http://localhost:8000/api','')\r\n     }\r\n    backendLookup(\"GET\", endpoint, callback,)\r\n}\r\n\r\nexport function apiTweetFeed(callback,nextUrl) {\r\n      let endpoint = \"/tweets/feed/\";\r\n     if (nextUrl){\r\n           endpoint = nextUrl.replace('http://localhost:8000/api','')\r\n     }\r\n    backendLookup(\"GET\", endpoint, callback,)\r\n}","import {apiTweetAction} from \"./lookup\";\r\nimport React from \"react\";\r\n\r\nexport function ActionBtn(props) {\r\n    const {tweet, didPerformAction, action} = props;\r\n    const likes = tweet.likes ? tweet.likes : 0;\r\n    const className = props.className ? props.className : 'btn btn-dark btn-sm mr-1';\r\n    const actionDisplay = action.display ? action.display : 'Action';\r\n    const handleActionBackendEvent = (response, status) => {\r\n        console.log(status, response);\r\n        if ((status === 201 || status === 200) && didPerformAction) {\r\n            didPerformAction(response, status);\r\n            //   setUserLikes(true)\r\n        }\r\n\r\n    };\r\n    const handleClick = (event) => {\r\n        event.preventDefault();\r\n        console.log(\"tweet_id\", tweet.id);\r\n        apiTweetAction(tweet.id, action.type, handleActionBackendEvent);\r\n\r\n    };\r\n    const display = action.type === \"like\" ? likes + \" \" + action.type : actionDisplay;\r\n    return <button className={className} onClick={handleClick}>{display}</button>;\r\n}","import React from \"react\";\r\n\r\nfunction UserLink(props) {\r\n    const {username} = props;\r\n    const handleUserLink = (event) => {\r\n        event.preventDefault();\r\n        window.location.href = `/profile/${username}`\r\n    };\r\n    return <span className='pointer' onClick={handleUserLink}>\r\n        {props.children}\r\n    </span>\r\n}\r\n\r\nexport function UserDisplay(props) {\r\n    const {user, includeFullName, hideLink} = props;\r\n    const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name}` : null;\r\n    return <React.Fragment>\r\n        {nameDisplay}{' '}\r\n        {hideLink === true ? `@${user.username}` : <UserLink username={user.username}>@{user.username}</UserLink>}\r\n    </React.Fragment>\r\n}\r\n\r\nexport function UserPicture(props) {\r\n    const {user, hideLink} = props;\r\n    const userIdSpan = <span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\r\n                    {user.last_name[0]}</span>;\r\n    return hideLink === true ? userIdSpan :\r\n        <UserLink username={user.username}>{userIdSpan}\r\n        </UserLink>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import numeral from \"numeral\";\r\nimport React from \"react\";\r\n\r\nexport function DisplayCount(props) {\r\n    return <span className={props.className}>{numeral(props.children).format(\"0a\")}</span>\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {apiTweetDetail} from \"../tweets/lookup\";\r\nimport {apiProfileDetail, apiProfileFollowToggle} from \"./lookup\";\r\nimport {UserDisplay, UserPicture} from \"./profile_components\";\r\nimport {DisplayCount} from \"./utils\";\r\nimport numeral from 'numeral'\r\n\r\n\r\n\r\n\r\nfunction ProfileBadge(props) {\r\n    const {user, didFollowToggle, profileLoading} = props;\r\n    let currentVerb = (user && user.is_following) ? \"UnFollow\" : \"Follow\";\r\n    currentVerb = profileLoading ? \"Loading...\" : currentVerb;\r\n    console.log(\"username:verb\", currentVerb);\r\n    const handleFollowToggle = (event) => {\r\n        console.log(event);\r\n        event.preventDefault();\r\n        if (didFollowToggle && !profileLoading) {\r\n            didFollowToggle(currentVerb)\r\n        }\r\n    };\r\n    return user ? <span>\r\n        <UserPicture user={user} hideLink/>\r\n        <p><UserDisplay user={user} includeFullName hideLink/></p>\r\n        <p><DisplayCount>{user.follower_count}</DisplayCount> {user.follower_count === 1 ? \"follower\" : \"followers\"}</p>\r\n        <p><DisplayCount>{user.following_count}</DisplayCount> following</p>\r\n        <p>bio: {user.bio}</p>\r\n        <p>location: {user.location}</p>\r\n    <button className='btn btn-primary' onClick={handleFollowToggle}>{currentVerb}</button></span> : null\r\n}\r\n\r\nexport function ProfileBadgeComponent(props) {\r\n    const {username} = props;\r\n    const [didLookup, setDidLookUp] = useState(false);\r\n    const [profile, setProfile] = useState(null);\r\n    const [profileLoading, setProfileLoading] = useState(false);\r\n    const handleBackendLookUp = (response, status) => {\r\n        if (status === 200) {\r\n            console.log(\"username:res\", response);\r\n            setProfile(response)\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        if (didLookup === false) {\r\n            apiProfileDetail(username, handleBackendLookUp);\r\n            setDidLookUp(true)\r\n        }\r\n    }, [username, didLookup, setDidLookUp]);\r\n\r\n    const handleNewFollow = (actionVerb) => {\r\n        apiProfileFollowToggle(username, actionVerb, (_response, status) => {\r\n            console.log(\"username:res\", _response, status)\r\n            if (status === 200) {\r\n                setProfile(_response)\r\n                //  apiProfileDetail(username,handleBackendLookUp)\r\n            }\r\n            setProfileLoading(false)\r\n        });\r\n        setProfileLoading(true);\r\n    };\r\n    return didLookup === false ? \"Loading...\" : profile ?\r\n        <ProfileBadge user={profile} didFollowToggle={handleNewFollow} profileLoading={profileLoading}/> : null\r\n}","import {backendLookup} from \"../lookup\";\r\n\r\n\r\nexport function apiProfileDetail(username, callback) {\r\n    backendLookup(\"GET\", `/profile/${username}/`, callback,)\r\n}\r\n\r\n\r\n\r\nexport function apiProfileFollowToggle(username, action, callback) {\r\n    const data = {action: `${action && action}`.toLowerCase()};\r\n    console.log(\"action: \",data);\r\n    backendLookup(\"POST\", `/profile/${username}/follow`, callback, data)\r\n}","import React, {useState} from \"react\";\r\nimport {ActionBtn} from \"./button\";\r\nimport {UserDisplay,UserPicture} from \"../profile\";\r\n\r\n\r\n\r\n\r\nexport function ParentTweet(props) {\r\n    const {tweet} = props;\r\n    return tweet.parent ?\r\n        <Tweet hideActions isReTweet retweeter={props.retweeter} className={' '} tweet={tweet.parent}/> : null\r\n}\r\n\r\n\r\nexport function Tweet(props) {\r\n    const {tweet, didRetweet, hideActions, isReTweet, retweeter} = props;\r\n\r\n    const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null);\r\n    let className = props.className ? props.className : 'col-10 mx-auto col-md-6';\r\n    className = isReTweet === true ? `${className} p-2 border rounded` : className;\r\n    const handlePerformAction = (newActionTweet, status) => {\r\n        if (status === 200) {\r\n            setActionTweet(newActionTweet);\r\n        } else if (status === 201) {\r\n            //let 'em known tweet created\r\n            if (didRetweet) {\r\n                didRetweet(newActionTweet)\r\n            }\r\n        }\r\n    };\r\n\r\n    const path = window.location.pathname;\r\n    const idRegex = /(?<id>\\d+)/;\r\n    const match = path.match(idRegex);\r\n    const urlTweetId = match ? match.groups.id : -1;\r\n\r\n    const isDetail = `${tweet.id}` === `${urlTweetId}`;\r\n    const handleLink = (event) => {\r\n        event.preventDefault();\r\n        window.location.href = `/${tweet.id}`\r\n    };\r\n    const user = tweet.user;\r\n// {(`${tweet.user}` && `${tweet.user}`)}\r\n\r\n    return <div className={className}>\r\n        {isReTweet === true &&\r\n        <div className='ml-2 mb-2 '><span className='small text-muted'>ReTweet via  <UserDisplay user={retweeter}/></span></div>}\r\n        <div className='d-flex'>\r\n\r\n            <div className='col-1 '>\r\n                <UserPicture user={tweet.user}/>\r\n            </div>\r\n            <div className='col-11'>\r\n                <div>\r\n\r\n                    <p><UserDisplay includeFullName user={tweet.user}/></p>\r\n                    <p>{tweet.content}</p>\r\n\r\n                    <ParentTweet tweet={tweet} retweeter={tweet.user}/>\r\n                </div>\r\n                <div className=\"btn btn-group-justified px-0\">\r\n                    {(actionTweet && hideActions !== true) && <React.Fragment>\r\n                        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction}\r\n                                   action={{type: \"like\", display: \"Likes\"}}/>\r\n                        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction}\r\n                                   action={{type: \"unlike\", display: \"UnLike\"}}/>\r\n                        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction}\r\n                                   action={{type: \"retweet\", display: \"ReTweet\"}}/></React.Fragment>}\r\n                    {isDetail !== false ? null :\r\n                        <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>\r\n                            View\r\n                        </button>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {apiTweetList} from \"./lookup\";\r\nimport {Tweet} from \"./detail\";\r\n\r\nexport function TweetList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([]);\r\n    const [tweets, setTweets] = useState([]);\r\n    const [nextUrl, setNextUrl] = useState(null);\r\n      const [preUrl, setPreUrl] = useState(null);\r\n    const [tweetsDidCall, setTweetsDidCall] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const final = [...props.newTweet].concat(tweetsInit);\r\n        if (final.length !== tweets.length) {\r\n            setTweets(final)\r\n        }\r\n\r\n    }, [props.newTweet, tweets, tweetsInit]);\r\n    useEffect(() => {\r\n        // do my lookup\r\n        if (tweetsDidCall === false) {\r\n            const handleTweetLookup = (response, status) => {\r\n                if (status === 200) {\r\n                    setNextUrl(response.next)\r\n                    setTweetsInit(response.results);\r\n                    setTweetsDidCall(true)\r\n                } else alert(\"There was an error\");\r\n            };\r\n            apiTweetList(props.username, handleTweetLookup);\r\n        }\r\n    }, [tweets, tweetsDidCall, setTweetsDidCall, props.username]);\r\n\r\n    const handleDidRetweet = (newTweet) => {\r\n        const updateTweetInit = [...tweetsInit];\r\n        updateTweetInit.unshift(newTweet);\r\n        setTweetsInit(updateTweetInit);\r\n        const updateFinalTweetInit = [...tweets];\r\n        updateFinalTweetInit.unshift(tweets);\r\n        setTweets(updateFinalTweetInit)\r\n    };\r\n\r\n    const handleLoadNext = (event) => {\r\n      event.preventDefault();\r\n        if (nextUrl !== null){\r\n            const handleLoadNextResponse = (response, status) =>{\r\n                if (status === 200) {\r\n                    const newTweets = [...tweets].concat(response.results);\r\n                    setNextUrl(response.next);\r\n                    setTweetsInit(response.results);\r\n                    setTweets(response.results);\r\n                } else alert(\"There was an error\");\r\n            };\r\n            apiTweetList(props.username,handleLoadNextResponse, nextUrl)\r\n        }\r\n    };\r\n\r\n\r\n\r\n    console.log(\"list: \",tweets);\r\n    return <React.Fragment>{tweets.map((item, index) => {\r\n        return <Tweet\r\n            tweet={item}\r\n            didRetweet={handleDidRetweet}\r\n            className=\"my-5 py-5 border bg-white text-dark\"\r\n            key={`${index}-{item.id}`}/>\r\n    })}{nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load Next</button>}</React.Fragment>\r\n}","import React from \"react\";\r\nimport {apiTweetCreate} from \"./lookup\";\r\n\r\n\r\n\r\nexport function TweetCreate(props) {\r\n    console.log(props);\r\n    // ...props === username\r\n    const {username} = props;\r\n    const {didTweet} = props;\r\n    const textAreaRef = React.createRef();\r\n    const handleBackEndUpdate =\r\n        (response, status) => {\r\n            // backend api response\r\n            if (status === 201) {\r\n                didTweet(response);\r\n            } else {\r\n                console.log(\"response\", response);\r\n                alert(\"An error occured please try again later!\")\r\n            }\r\n        };\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const newVal = textAreaRef.current.value;\r\n        // backend api request\r\n        apiTweetCreate(newVal, handleBackEndUpdate);\r\n        textAreaRef.current.value = '';\r\n    };\r\n\r\n    return <div className={props.className}>\r\n        <form onSubmit={handleSubmit}>\r\n                <textarea ref={textAreaRef} className='form-control' name='tweet'>\r\n                </textarea>\r\n            <button className='btn btn-primary my-3'>Tweet</button>\r\n        </form>\r\n    </div>\r\n}\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {apiTweetFeed} from \"./lookup\";\r\nimport {Tweet} from \"./detail\";\r\n\r\nexport function FeedList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([]);\r\n    const [tweets, setTweets] = useState([]);\r\n    const [nextUrl, setNextUrl] = useState(null);\r\n      const [preUrl, setPreUrl] = useState(null);\r\n    const [tweetsDidCall, setTweetsDidCall] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const final = [...props.newTweet].concat(tweetsInit);\r\n        if (final.length !== tweets.length) {\r\n            setTweets(final)\r\n        }\r\n\r\n    }, [props.newTweet, tweets, tweetsInit]);\r\n    useEffect(() => {\r\n        // do my lookup\r\n        if (tweetsDidCall === false) {\r\n            const handleTweetLookup = (response, status) => {\r\n                if (status === 200) {\r\n                    setNextUrl(response.next)\r\n                    setTweetsInit(response.results);\r\n                    setTweetsDidCall(true)\r\n                }\r\n            };\r\n            apiTweetFeed(handleTweetLookup);\r\n        }\r\n    }, [tweets, tweetsDidCall, setTweetsDidCall, props.username]);\r\n\r\n    const handleDidRetweet = (newTweet) => {\r\n        const updateTweetInit = [...tweetsInit];\r\n        updateTweetInit.unshift(newTweet);\r\n        setTweetsInit(updateTweetInit);\r\n        const updateFinalTweetInit = [...tweets];\r\n        updateFinalTweetInit.unshift(tweets);\r\n        setTweets(updateFinalTweetInit)\r\n    };\r\n\r\n    const handleLoadNext = (event) => {\r\n      event.preventDefault();\r\n        if (nextUrl !== null){\r\n            const handleLoadNextResponse = (response, status) =>{\r\n                if (status === 200) {\r\n                    const newTweets = [...tweets].concat(response.results);\r\n                    setNextUrl(response.next);\r\n                    setTweetsInit(response.results);\r\n                    setTweets(response.results);\r\n                }\r\n            };\r\n            apiTweetFeed(handleLoadNextResponse, nextUrl)\r\n        }\r\n    };\r\n\r\n\r\n\r\n    console.log(\"list: \",tweets);\r\n    return <React.Fragment>{tweets.map((item, index) => {\r\n        return <Tweet\r\n            tweet={item}\r\n            didRetweet={handleDidRetweet}\r\n            className=\"my-5 py-5 border bg-white text-dark\"\r\n            key={`${index}-{item.id}`}/>\r\n    })}{nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load Next</button>}</React.Fragment>\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {TweetList} from \"./list\";\r\nimport {TweetCreate} from \"./create\";\r\nimport {apiTweetDetail} from \"./lookup\"\r\nimport {Tweet} from \"./detail\";\r\nimport {FeedList} from \"./feed\";\r\n\r\nexport function FeedComponent(props) {\r\n    console.log(props);\r\n    const canTweet = props.canTweet !== \"false\";\r\n\r\n    const [newTweets, setNewTweet] = useState([]);\r\n    const handleNewTweet =\r\n        (newTweet) => {\r\n            console.log(\"new tweet\", [...newTweets]);\r\n            let tempNewTweet = [...newTweets];\r\n            tempNewTweet.unshift(newTweet);\r\n            setNewTweet(tempNewTweet);\r\n        };\r\n    console.log(\"component\");\r\n    return <div className={props.className}>\r\n        {(canTweet === true) && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3'/>}\r\n\r\n        <FeedList newTweet={newTweets} {...props}/>\r\n    </div>\r\n}\r\n\r\nexport function TweetComponent(props) {\r\n    console.log(props);\r\n    const canTweet = props.canTweet !== \"false\";\r\n\r\n    const [newTweets, setNewTweet] = useState([]);\r\n    const handleNewTweet =\r\n        (newTweet) => {\r\n            console.log(\"new tweet\", [...newTweets]);\r\n            let tempNewTweet = [...newTweets];\r\n            tempNewTweet.unshift(newTweet);\r\n            setNewTweet(tempNewTweet);\r\n        };\r\n    console.log(\"component\")\r\n    return <div className={props.className}>\r\n        {(canTweet === true) && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3'/>}\r\n\r\n        <TweetList newTweet={newTweets} {...props}/>\r\n    </div>\r\n}\r\n\r\nexport function TweetDetailComponent(props) {\r\n    const {tweetId} = props;\r\n    const [didLookup, setDidLookUp] = useState(false);\r\n    const [tweet, setTweet] = useState(null);\r\n    const handleBackendLookUp = (response, status) => {\r\n        if (status === 200) {\r\n            console.log(\"set tweet\", response);\r\n            setTweet(response)\r\n        } else {\r\n            alert(\"There was an error finding your tweet! TweetDetailComponent!\")\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        if (didLookup === false) {\r\n            apiTweetDetail(tweetId, handleBackendLookUp)\r\n            setDidLookUp(true)\r\n        }\r\n    }, [tweetId, didLookup, setDidLookUp]);\r\n    return tweet === null ? null : <Tweet tweet={tweet}\r\n                                          className={props.className}/>\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {TweetComponent} from \"./tweets\";\n\n\nfunction App() {\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n                <p>\n                    Edit <code>src/App.js</code> and save to reload.\n                </p>\n                <div>\n                    <TweetComponent/>\n                </div>\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {FeedComponent,TweetComponent, TweetDetailComponent} from \"./tweets\";\nimport {ProfileBadgeComponent} from \"./profile\";\n\nconst appEl = document.getElementById(\"root\");\nif (appEl) {\n    ReactDOM.render(\n        <React.StrictMode>\n            <App/>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n}\n\nconst e = React.createElement;\nconst tweetEl = document.getElementById(\"tweetme-2\");\nif (tweetEl) {\n    ReactDOM.render(e(TweetComponent, tweetEl.dataset), tweetEl);\n}\n\nconst tweetFeedEl = document.getElementById(\"tweetme-2-feed\");\nif (tweetFeedEl) {\n    ReactDOM.render(e(FeedComponent, tweetFeedEl.dataset), tweetFeedEl);\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-2-detail\");\ntweetDetailElements.forEach(container =>{\n    ReactDOM.render(e(TweetDetailComponent, container.dataset), container);\n});\n\n\nconst userProfileBadgeElements = document.querySelectorAll(\".tweetme-2-profile-badge\");\nuserProfileBadgeElements.forEach(container =>{\n    ReactDOM.render(e(ProfileBadgeComponent, container.dataset), container);\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}