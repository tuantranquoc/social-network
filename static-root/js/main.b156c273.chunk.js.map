{"version":3,"sources":["logo.svg","lookup/lookup_components.js","tweets/lookup.js","tweets/button.js","profile/profile_components.js","profile/utils.js","profile/badge.js","profile/lookup.js","tweets/create.js","tweets/detail.js","tweets/list.js","tweets/feed.js","tweets/tweet_components.js","serviceWorker.js","index.js"],"names":["module","exports","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","open","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","setRequestHeader","responseType","onload","status","response","detail","window","location","href","indexOf","onerror","e","console","log","send","apiCommentList","tweetId","apiParentCommentList","commentId","apiTweetList","username","nextUrl","replace","apiTweetFeed","ActionBtn","props","tweet","didPerformAction","action","likes","className","actionDisplay","display","handleActionBackendEvent","type","onClick","event","preventDefault","id","apiTweetAction","UserLink","children","UserDisplay","user","includeFullName","hideLink","nameDisplay","first_name","last_name","Fragment","UserPicture","userIdSpan","DisplayCount","numeral","format","ProfileBadge","didFollowToggle","profileLoading","currentVerb","is_following","style","height","color","follower_count","following_count","bio","ProfileBadgeComponent","useState","didLookup","setDidLookUp","profile","setProfile","setProfileLoading","handleBackendLookUp","useEffect","apiProfileDetail","actionVerb","toLowerCase","apiProfileFollowToggle","_response","TweetCreate","didTweet","textAreaRef","React","createRef","handleBackEndUpdate","alert","onSubmit","newVal","current","value","content","ref","CommentCreate","showResults","setShowResults","didComment","comments","setComments","newComment","setNewComment","newComments","setNewComments","handleBackEndLookUp","onCommentClick","map","item","index","AllowChildComment","showResult","apiCommentCreate","CommentChildCreate","apiChildCommentCreate","ParentTweet","parent","Tweet","hideActions","isReTweet","retweeter","didRetweet","actionTweet","setActionTweet","handlePerformAction","newActionTweet","path","pathname","idRegex","match","urlTweetId","groups","isDetail","AllowComment","commentList","handleNewComment","undefined","TweetList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidCall","setTweetsDidCall","final","newTweet","concat","next","results","handleDidRetweet","updateTweetInit","unshift","updateFinalTweetInit","key","FeedList","TweetDetailComponent","setTweet","CommentComponent","Boolean","hostname","getElementById","ReactDOM","render","StrictMode","createElement","tweetEl","canTweet","newTweets","setNewTweet","tempNewTweet","dataset","tweetFeedEl","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b156c273.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","function getCookie(name) {\r\n    var cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        var cookies = document.cookie.split(';');\r\n        for (var i = 0; i < cookies.length; i++) {\r\n            var cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n    let jsonData;\r\n    if (data) {\r\n        jsonData = JSON.stringify(data);\r\n    }\r\n    // getting html elements\r\n    const xhr = new XMLHttpRequest();\r\n    // `http://localhost:8000/api${endpoint}`\r\n    const url = `http://localhost:8000/api${endpoint}`;\r\n    xhr.open(method, url);\r\n    const csrftoken = getCookie('csrftoken');\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n    if (csrftoken) {\r\n        xhr.setRequestHeader(\"X-CSRFToken\", csrftoken);\r\n    }\r\n\r\n\r\n    xhr.responseType = \"json\";\r\n    xhr.onload = function () {\r\n        if (xhr.status === 403){\r\n            const detail = xhr.response.detail;\r\n            if (detail === \"Authentication credentials are not provided\"){\r\n                if (window.location.href.indexOf(\"login\") === -1){\r\n                     window.location.href = \"/login?showLoginRequired=true\";\r\n                }\r\n            }\r\n        }\r\n        callback(xhr.response, xhr.status);\r\n    };\r\n    xhr.onerror = function (e) {\r\n        console.log(e);\r\n        callback({\"message\": \"the request was an error!\"}, 400)\r\n    };\r\n    xhr.send(jsonData);\r\n}\r\n\r\n\r\n","import {backendLookup} from \"../lookup/lookup_components\";\r\n\r\nexport function apiTweetCreate(newTweet, callback) {\r\n    const data = {content: newTweet};\r\n    backendLookup(\"POST\", \"/tweets/create/\", callback, data)\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action, callback) {\r\n    const data = {id: tweetId, action: action};\r\n    backendLookup(\"POST\", \"/tweets/action/\", callback, data)\r\n}\r\n\r\nexport function apiTweetDetail(tweet_id, callback) {\r\n    backendLookup(\"GET\", `/tweets/${tweet_id}/`, callback,)\r\n}\r\n\r\nexport function apiCommentList(tweetId, callback) {\r\n\r\n    const endPoint = `/tweets/comment/${tweetId}`;\r\n\r\n    backendLookup(\"GET\", `/tweets/comment/${tweetId}`, callback,)\r\n}\r\n\r\nexport function apiCommentCreate(tweetId, newComment, callback) {\r\n    const data = {id: tweetId, content: newComment};\r\n    backendLookup(\"POST\", \"/tweets/comment/create/\", callback, data)\r\n}\r\n\r\nexport function apiChildCommentCreate(commentId, newComment, callback) {\r\n    const data = {content: newComment};\r\n    backendLookup(\"POST\", `/tweets/comment/child/create/${commentId}`, callback, data)\r\n}\r\n\r\nexport function apiParentCommentList(commentId, callback) {\r\n    console.log(\"comment-id in lookup\",commentId)\r\n    backendLookup(\"GET\", `/tweets/comment/parent/${commentId}`, callback)\r\n}\r\n\r\nexport function apiTweetList(username, callback, nextUrl) {\r\n    let endpoint = \"/tweets/\";\r\n    if (username) {\r\n        endpoint = `/tweets/?username=${username}`;\r\n    }\r\n    if (nextUrl) {\r\n        endpoint = nextUrl.replace('http://localhost:8000/api', '')\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback,)\r\n}\r\n\r\nexport function apiTweetListTest(callback) {\r\n    let endpoint = \"/tweets/\";\r\n    backendLookup(\"GET\", endpoint, callback,)\r\n}\r\n\r\nexport function apiTweetFeed(callback, nextUrl) {\r\n    let endpoint = \"/tweets/feed/\";\r\n    if (nextUrl) {\r\n        endpoint = nextUrl.replace('http://localhost:8000/api', '')\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback,)\r\n}","import {apiTweetAction} from \"./lookup\";\r\nimport React from \"react\";\r\n\r\nexport function ActionBtn(props) {\r\n    const {tweet, didPerformAction, action} = props;\r\n    const likes = tweet.likes ? tweet.likes : 0;\r\n    const className = props.className ? props.className : 'btn btn-dark btn-sm mr-1';\r\n    const actionDisplay = action.display ? action.display : 'Action';\r\n    const handleActionBackendEvent = (response, status) => {\r\n        console.log(status, response);\r\n        if ((status === 201 || status === 200) && didPerformAction) {\r\n            didPerformAction(response, status);\r\n            //   setUserLikes(true)\r\n        }\r\n\r\n    };\r\n    const handleClick = (event) => {\r\n        event.preventDefault();\r\n        console.log(\"tweet_id\", tweet.id);\r\n        apiTweetAction(tweet.id, action.type, handleActionBackendEvent);\r\n    };\r\n    const display = action.type === \"like\" ? likes + \" \" + action.type : actionDisplay;\r\n    return <button className={className} onClick={handleClick}>{display}</button>;\r\n}","import React from \"react\";\r\n\r\nfunction UserLink(props) {\r\n    const {username} = props;\r\n    const handleUserLink = (event) => {\r\n        event.preventDefault();\r\n        window.location.href = `/profile/${username}`\r\n    };\r\n    return <span className='pointer' onClick={handleUserLink}>\r\n        {props.children}\r\n    </span>\r\n}\r\n\r\nexport function UserDisplay(props) {\r\n    const {user, includeFullName, hideLink} = props;\r\n    const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name}` : null;\r\n    return <React.Fragment>\r\n        {nameDisplay}{' '}\r\n        {hideLink === true ? `@${user.username}` : <UserLink username={user.username}>@{user.username}</UserLink>}\r\n    </React.Fragment>\r\n}\r\n\r\nexport function UserPicture(props) {\r\n    const {user, hideLink} = props;\r\n    const userIdSpan = <span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\r\n                    {user.last_name[0]}</span>;\r\n    return hideLink === true ? userIdSpan :\r\n        <UserLink username={user.username}>{userIdSpan}\r\n        </UserLink>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import numeral from \"numeral\";\r\nimport React from \"react\";\r\n\r\nexport function DisplayCount(props) {\r\n    return <span className={props.className}>{numeral(props.children).format(\"0a\")}</span>\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {apiTweetDetail} from \"../tweets/lookup\";\r\nimport {apiProfileDetail, apiProfileFollowToggle} from \"./lookup\";\r\nimport {UserDisplay, UserPicture} from \"./profile_components\";\r\nimport {DisplayCount} from \"./utils\";\r\nimport numeral from 'numeral'\r\nconst mystyle = {\r\n      color: \"white\",\r\n      backgroundColor: \"DodgerBlue\",\r\n      padding: \"10px\",\r\n      fontFamily: \"Arial\",\r\n        height: '200px'\r\n    };\r\n\r\nfunction ProfileBadge(props) {\r\n    const {user, didFollowToggle, profileLoading} = props;\r\n    let currentVerb = (user && user.is_following) ? \"UnFollow\" : \"Follow\";\r\n    currentVerb = profileLoading ? \"Loading...\" : currentVerb;\r\n    console.log(\"username:verb\", currentVerb);\r\n    const handleFollowToggle = (event) => {\r\n        console.log(event);\r\n        event.preventDefault();\r\n        if (didFollowToggle && !profileLoading) {\r\n            didFollowToggle(currentVerb)\r\n        }\r\n    };\r\n    return user ? <span>\r\n        <div className='w-75 border border-dark text-center mb-2' style={{height: '200px',color:'white'}}>\r\n            <p className='h-100 my-auto' style={{color:'black'}}>User Image Background</p>\r\n        </div>\r\n        <div className='d-flex'>\r\n            <UserPicture user={user} hideLink/>\r\n            <p><UserDisplay user={user} includeFullName hideLink/></p>\r\n        </div>\r\n        <div className='d-flex ml-5'>\r\n            <p className='mr-3'><DisplayCount>{user.follower_count}</DisplayCount> {user.follower_count === 1 ? \"follower\" : \"followers\"}</p>\r\n            |\r\n            <p className='ml-3'><DisplayCount>{user.following_count}</DisplayCount> following</p>\r\n        </div>\r\n\r\n            <p className='ml-5'>bio: {user.bio}</p>\r\n            <p className='ml-5'>location: {user.location}</p>\r\n\r\n    <button className='btn btn-primary ml-5' onClick={handleFollowToggle}>{currentVerb}</button></span> : null\r\n}\r\n\r\nexport function ProfileBadgeComponent(props) {\r\n    const {username} = props;\r\n    const [didLookup, setDidLookUp] = useState(false);\r\n    const [profile, setProfile] = useState(null);\r\n    const [profileLoading, setProfileLoading] = useState(false);\r\n    const handleBackendLookUp = (response, status) => {\r\n        if (status === 200) {\r\n            console.log(\"username:res\", response);\r\n            setProfile(response)\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        if (didLookup === false) {\r\n            apiProfileDetail(username, handleBackendLookUp);\r\n            setDidLookUp(true)\r\n        }\r\n    }, [username, didLookup, setDidLookUp]);\r\n\r\n    const handleNewFollow = (actionVerb) => {\r\n        apiProfileFollowToggle(username, actionVerb, (_response, status) => {\r\n            console.log(\"username:res\", _response, status);\r\n            if (status === 200) {\r\n                setProfile(_response)\r\n                //  apiProfileDetail(username,handleBackendLookUp)\r\n            }\r\n            setProfileLoading(false)\r\n        });\r\n        setProfileLoading(true);\r\n    };\r\n    return didLookup === false ? \"Loading...\" : profile ?\r\n        <ProfileBadge user={profile} didFollowToggle={handleNewFollow} profileLoading={profileLoading}/> : null\r\n}","import {backendLookup} from \"../lookup\";\r\n\r\n\r\nexport function apiProfileDetail(username, callback) {\r\n    backendLookup(\"GET\", `/profile/${username}/`, callback,)\r\n}\r\n\r\n\r\n\r\nexport function apiProfileFollowToggle(username, action, callback) {\r\n    const data = {action: `${action && action}`.toLowerCase()};\r\n    console.log(\"action: \",data);\r\n    backendLookup(\"POST\", `/profile/${username}/follow`, callback, data)\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {apiTweetCreate, apiCommentCreate, apiCommentList,apiChildCommentCreate,apiParentCommentList} from \"./lookup\";\r\nimport {AllowComment,AllowChildComment} from \"./detail\";\r\n\r\nexport function TweetCreate(props) {\r\n    console.log(props);\r\n    // ...props === username\r\n    const {username} = props;\r\n    const {didTweet} = props;\r\n    const textAreaRef = React.createRef();\r\n    const handleBackEndUpdate =\r\n        (response, status) => {\r\n            // backend api response\r\n            if (status === 201) {\r\n                didTweet(response);\r\n            } else {\r\n                console.log(\"response\", response);\r\n                alert(\"Please login to tweet\")\r\n            }\r\n        };\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const newVal = textAreaRef.current.value;\r\n        // backend api request\r\n        apiTweetCreate(newVal, handleBackEndUpdate);\r\n        textAreaRef.current.value = '';\r\n    };\r\n\r\n    return <div className={props.className}>\r\n        <form onSubmit={handleSubmit}>\r\n                <textarea ref={textAreaRef} className='form-control' name='tweet'>\r\n                </textarea>\r\n            <button className='btn btn-primary my-3 mr-2'>Tweet</button>\r\n            <button className='btn btn-primary my-3'>Upload</button>\r\n        </form>\r\n    </div>\r\n}\r\n\r\n\r\nexport function CommentCreate(props) {\r\n    // ...props === username\r\n    const [showResults, setShowResults] = useState(false);\r\n    const {tweetId} = props;\r\n    const {didComment} = props;\r\n    const [comments, setComments] = useState([]);\r\n    const [newComment, setNewComment] = useState([]);\r\n    const [didLookup, setDidLookUp] = useState(false);\r\n    const [newComments, setNewComments] = useState(false);\r\n    const textAreaRef = React.createRef();\r\n\r\n    console.log(\"tweetId: \", tweetId);\r\n    const handleBackEndUpdate =\r\n        (response, status) => {\r\n            // backend api response\r\n            if (status === 201) {\r\n                //   didComment(response);\r\n                setNewComment(response[0].content);\r\n                setNewComments(true);\r\n            }\r\n        };\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const newVal = textAreaRef.current.value;\r\n        // backend api request\r\n        apiCommentCreate(tweetId, newVal, handleBackEndUpdate);\r\n        textAreaRef.current.value = '';\r\n    };\r\n\r\n    const handleBackEndLookUp = (response, status) => {\r\n        if (status === 200) {\r\n            setComments(response);\r\n            console.log(\"username:response\", response)\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (didLookup === false) {\r\n            apiCommentList(tweetId, handleBackEndLookUp);\r\n            setDidLookUp(true)\r\n        }\r\n    }, [tweetId, didLookup, setDidLookUp]);\r\n\r\n    const onCommentClick = (event) => {\r\n        event.preventDefault();\r\n        if (setShowResults)\r\n            setShowResults(false);\r\n        setShowResults(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(\"we has new comment\", newComments);\r\n        if (newComments === true) {\r\n            apiCommentList(tweetId, handleBackEndLookUp);\r\n            console.log(\"new comments list inside\", comments);\r\n            setNewComments(false)\r\n        }\r\n    }, [tweetId, newComments, setNewComments]);\r\n    console.log(\"username:newComment\", newComment);\r\n    console.log(\"new comments list outside\", comments);\r\n    return  <div>\r\n        <div className='text-left border border-dark p-3 mb-2'>{comments.map((item, index) => {\r\n            return <React.Fragment><li className='mb-1'>@{item.username} said: {item.content}</li>\r\n                <button onClick={onCommentClick}>comment</button>\r\n                <AllowChildComment commentId={item.id} showResult={showResults}/>\r\n            </React.Fragment>\r\n        })}</div>\r\n        <div className={props.className}>\r\n            <form onSubmit={handleSubmit}>\r\n                <textarea ref={textAreaRef} className='form-control' name='tweet'>\r\n                </textarea>\r\n                <button className='btn btn-primary my-3 mr-2'>Comment</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport function CommentChildCreate(props) {\r\n    // ...props === username\r\n    const [showResults, setShowResults] = useState(false);\r\n    const {commentId} = props;\r\n    const {didComment} = props;\r\n    const [comments, setComments] = useState([]);\r\n    const [newComment, setNewComment] = useState([]);\r\n    const [didLookup, setDidLookUp] = useState(false);\r\n    const [newComments, setNewComments] = useState(false);\r\n    const textAreaRef = React.createRef();\r\n\r\n    console.log(\"commentId: \", commentId);\r\n    console.log(\"currentChildComment: \", comments);\r\n    const handleBackEndUpdate =\r\n        (response, status) =>\r\n        {\r\n             console.log(\"child create status\",status);\r\n            // backend api response\r\n            if (status === 201) {\r\n                //   didComment(response);\r\n                 console.log(\"child create response\",response);\r\n                setNewComment(response.content);\r\n                setNewComments(true);\r\n            }\r\n        };\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const newVal = textAreaRef.current.value;\r\n        // backend api request\r\n        apiChildCommentCreate(commentId, newVal, handleBackEndUpdate);\r\n        textAreaRef.current.value = '';\r\n    };\r\n\r\n    const handleBackEndLookUp = (response, status) => {\r\n         console.log(\"child status\", status);\r\n        if (status === 200) {\r\n            setComments(response);\r\n            console.log(\"child status\", status)\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(\"didlook\",commentId);\r\n        if (didLookup === false) {\r\n            console.log(\"we in here\",commentId)\r\n            apiParentCommentList(commentId, handleBackEndLookUp);\r\n            setDidLookUp(true)\r\n        }\r\n    }, [commentId, didLookup, setDidLookUp]);\r\n\r\n    const onCommentClick = (event) => {\r\n        event.preventDefault();\r\n        if (setShowResults)\r\n            setShowResults(false);\r\n        setShowResults(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        if (newComments === true) {\r\n            apiParentCommentList(commentId, handleBackEndLookUp);\r\n            console.log(\"new comments list inside\", comments);\r\n            setNewComments(false)\r\n        }\r\n    }, [commentId, newComments, setNewComments]);\r\n    return  <div>\r\n        <div className='text-left border border-dark p-3 mb-2'>{comments.map((item, index) => {\r\n            return <React.Fragment><li className='mb-1'>@{item.username} said: {item.content}</li>\r\n            </React.Fragment>\r\n        })}</div>\r\n        <div className={props.className}>\r\n            <form onSubmit={handleSubmit}>\r\n                <textarea ref={textAreaRef} className='form-control' name='tweet'>\r\n                </textarea>\r\n                <button className='btn btn-primary my-3 mr-2'>send</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {ActionBtn} from \"./button\";\r\nimport {UserDisplay, UserPicture} from \"../profile\";\r\nimport {apiCommentList, apiTweetDetail} from \"./lookup\";\r\nimport {CommentCreate,CommentChildCreate} from \"./create\";\r\n\r\n\r\nexport function ParentTweet(props) {\r\n    const {tweet} = props;\r\n    return tweet.parent ?\r\n        <Tweet hideActions isReTweet retweeter={props.retweeter} className={' '} tweet={tweet.parent}/> : null\r\n}\r\n\r\n\r\nexport function Tweet(props) {\r\n    const {tweet, didRetweet, hideActions, isReTweet, retweeter} = props;\r\n    const [comments, setComments] = useState([]);\r\n    const [didLookup, setDidLookUp] = useState(false);\r\n    const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null);\r\n    const [showResults, setShowResults] = useState(false);\r\n    const onCommentClick = (event) => {\r\n        event.preventDefault();\r\n        if (setShowResults)\r\n            setShowResults(false);\r\n        setShowResults(true);\r\n    };\r\n    let className = props.className ? props.className : 'col-10 mx-auto col-md-6';\r\n    className = isReTweet === true ? `${className} p-2 border rounded` : className;\r\n    const handlePerformAction = (newActionTweet, status) => {\r\n        if (status === 200) {\r\n            setActionTweet(newActionTweet);\r\n        } else if (status === 201) {\r\n            //let 'em known tweet created\r\n            if (didRetweet) {\r\n                didRetweet(newActionTweet)\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleBackEndLookUp = (response, status) => {\r\n        if (status === 200) {\r\n            setComments(response)\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (didLookup === false) {\r\n            apiCommentList(tweet.id, handleBackEndLookUp);\r\n            setDidLookUp(true)\r\n        }\r\n    }, [tweet.id, didLookup, setDidLookUp]);\r\n\r\n\r\n    const path = window.location.pathname;\r\n    const idRegex = /(?<id>\\d+)/;\r\n    const match = path.match(idRegex);\r\n    const urlTweetId = match ? match.groups.id : -1;\r\n\r\n    const isDetail = `${tweet.id}` === `${urlTweetId}`;\r\n    const handleLink = (event) => {\r\n        event.preventDefault();\r\n        window.location.href = `/${tweet.id}`\r\n    };\r\n    const user = tweet.user;\r\n// {(`${tweet.user}` && `${tweet.user}`)}\r\n    //   console.log(\"username:parent\", tweet.parent);\r\n    return <div className={className}>\r\n        {isReTweet === true &&\r\n        <div className='ml-2 mb-2 '><span className='small text-muted'>ReTweet via  <UserDisplay\r\n            user={retweeter}/></span></div>}\r\n        <div className='d-flex'>\r\n            <div className='col-1 mr-2'>\r\n                <UserPicture user={tweet.user}/>\r\n            </div>\r\n            <div className='col-11'>\r\n                <div>\r\n                    <p><UserDisplay includeFullName user={tweet.user}/></p>\r\n                    <p>{tweet.content}</p>\r\n\r\n                    <ParentTweet tweet={tweet} retweeter={tweet.user}/>\r\n                </div>\r\n                <div className=\"btn btn-group-justified px-0\">\r\n                    {(actionTweet && hideActions !== true) && <React.Fragment>\r\n                        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction}\r\n                                   action={{type: \"like\", display: \"Likes\"}}/>\r\n                        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction}\r\n                                   action={{type: \"unlike\", display: \"UnLike\"}}/>\r\n                        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction}\r\n                                   action={{type: \"retweet\", display: \"ReTweet\"}}/>\r\n                        <button className='btn btn-dark btn-sm mr-1' onClick={onCommentClick}>Comment</button>\r\n                    </React.Fragment>}\r\n\r\n\r\n                    {isDetail !== false ? null :\r\n                        <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>\r\n                            View\r\n                        </button>}\r\n                    <div className='mt-3'>​\r\n                        {showResults &&\r\n                        <AllowComment tweet={tweet} showResult={showResults}\r\n                                      commentList={comments}/>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n/**\r\n * @return {null}\r\n */\r\nexport function AllowComment(props) {\r\n    const {commentList, showResult, tweet, handleNewComment,tweetId} = props;\r\n    console.log(\"showResult\",showResult);\r\n     console.log(\"tweet_id\",tweet.id);\r\n    return commentList.length !== 0 && showResult ?\r\n        <CommentCreate tweetId={tweet.id}/>\r\n        : <CommentCreate tweetId={tweet.id}/>\r\n}\r\n\r\n\r\nexport function AllowChildComment(props) {\r\n    const {commentId, showResult} = props;\r\n    console.log(\"child showResult\",showResult);\r\n    console.log(\"child commentId\",commentId);\r\n    console.log(\"child bool\",commentId !== undefined && showResult);\r\n    return commentId !== undefined && showResult ?\r\n        <CommentChildCreate commentId={commentId}/>\r\n        : null\r\n}\r\n\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {apiTweetList} from \"./lookup\";\r\nimport {Tweet} from \"./detail\";\r\n\r\nexport function TweetList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([]);\r\n    const [tweets, setTweets] = useState([]);\r\n    const [nextUrl, setNextUrl] = useState(null);\r\n    const [preUrl, setPreUrl] = useState(null);\r\n    const [tweetsDidCall, setTweetsDidCall] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const final = [...props.newTweet].concat(tweetsInit);\r\n        if (final.length !== tweets.length) {\r\n            setTweets(final)\r\n        }\r\n\r\n    }, [props.newTweet, tweets, tweetsInit]);\r\n    useEffect(() => {\r\n        // do my lookup\r\n        if (tweetsDidCall === false) {\r\n            const handleTweetLookup = (response, status) => {\r\n                if (status === 200) {\r\n                    setNextUrl(response.next)\r\n                    setTweetsInit(response.results);\r\n                    setTweetsDidCall(true)\r\n                } else alert(\"There was an error\");\r\n            };\r\n            apiTweetList(props.username, handleTweetLookup);\r\n        }\r\n    }, [tweets, tweetsDidCall, setTweetsDidCall, props.username]);\r\n\r\n    const handleDidRetweet = (newTweet) => {\r\n        const updateTweetInit = [...tweetsInit];\r\n        updateTweetInit.unshift(newTweet);\r\n        setTweetsInit(updateTweetInit);\r\n        const updateFinalTweetInit = [...tweets];\r\n        updateFinalTweetInit.unshift(tweets);\r\n        setTweets(updateFinalTweetInit)\r\n    };\r\n\r\n    const handleLoadNext = (event) => {\r\n        event.preventDefault();\r\n        if (nextUrl !== null) {\r\n            const handleLoadNextResponse = (response, status) => {\r\n                if (status === 200) {\r\n                    const newTweets = [...tweets].concat(response.results);\r\n                    setNextUrl(response.next);\r\n                    setTweetsInit(response.results);\r\n                    setTweets(response.results);\r\n                } else alert(\"There was an error\");\r\n            };\r\n            apiTweetList(props.username, handleLoadNextResponse, nextUrl)\r\n        }\r\n    };\r\n\r\n\r\n    return <React.Fragment>{tweets.map((item, index) => {\r\n        return <Tweet\r\n            tweet={item}\r\n            didRetweet={handleDidRetweet}\r\n            className=\"my-5 py-5 border bg-white text-dark\"\r\n            key={`${index}-{item.id}`}/>\r\n    })}{nextUrl !== null &&\r\n    <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load Next</button>}</React.Fragment>\r\n}\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {apiTweetFeed} from \"./lookup\";\r\nimport {Tweet} from \"./detail\";\r\n\r\nexport function FeedList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([]);\r\n    const [tweets, setTweets] = useState([]);\r\n    const [nextUrl, setNextUrl] = useState(null);\r\n    const [preUrl, setPreUrl] = useState(null);\r\n    const [tweetsDidCall, setTweetsDidCall] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const final = [...props.newTweet].concat(tweetsInit);\r\n        if (final.length !== tweets.length) {\r\n            setTweets(final)\r\n        }\r\n\r\n    }, [props.newTweet, tweets, tweetsInit]);\r\n    useEffect(() => {\r\n        // do my lookup\r\n        if (tweetsDidCall === false) {\r\n            const handleTweetLookup = (response, status) => {\r\n                if (status === 200) {\r\n                    setNextUrl(response.next);\r\n                    setTweetsInit(response.results);\r\n                    setTweetsDidCall(true)\r\n                }\r\n            };\r\n            apiTweetFeed(handleTweetLookup);\r\n        }\r\n    }, [tweets, tweetsDidCall, setTweetsDidCall, props.username]);\r\n\r\n    const handleDidRetweet = (newTweet) => {\r\n        const updateTweetInit = [...tweetsInit];\r\n        updateTweetInit.unshift(newTweet);\r\n        setTweetsInit(updateTweetInit);\r\n        const updateFinalTweetInit = [...tweets];\r\n        updateFinalTweetInit.unshift(tweets);\r\n        setTweets(updateFinalTweetInit)\r\n    };\r\n\r\n    const handleLoadNext = (event) => {\r\n        event.preventDefault();\r\n        if (nextUrl !== null) {\r\n            const handleLoadNextResponse = (response, status) => {\r\n                if (status === 200) {\r\n                    const newTweets = [...tweets].concat(response.results);\r\n                    setNextUrl(response.next);\r\n                    setTweetsInit(response.results);\r\n                    setTweets(response.results);\r\n                }\r\n            };\r\n            apiTweetFeed(handleLoadNextResponse, nextUrl)\r\n        }\r\n    };\r\n\r\n\r\n    console.log(\"list: \", tweets);\r\n    return <React.Fragment>{tweets.map((item, index) => {\r\n        return <Tweet\r\n            tweet={item}\r\n            didRetweet={handleDidRetweet}\r\n            className=\"my-5 py-5 border bg-white text-dark\"\r\n            key={`${index}-{item.id}`}/>\r\n    })}{nextUrl !== null &&\r\n    <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load Next</button>}</React.Fragment>\r\n}\r\n\r\nfunction CommentList(props) {\r\n    const [comments, setComments] = useState([]);\r\n    const {newComment} = props.newComment;\r\n    const [commentsInit, setCommentsInit] = useState([]);\r\n    const [commentsDidCall, setCommentsDidCall] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        const final = [...newComment].concat(commentsInit);\r\n        if (final.length !== comments.length) {\r\n            setComments(final)\r\n        }\r\n\r\n    }, [props.newComment, comments, commentsInit]);\r\n    useEffect(() => {\r\n        // do my lookup\r\n        if (commentsDidCall === false) {\r\n            const handleTweetLookup = (response, status) => {\r\n                if (status === 200) {\r\n                    setCommentsInit(response.results);\r\n                    setCommentsDidCall(true)\r\n                }\r\n            };\r\n            apiTweetFeed(handleTweetLookup);\r\n        }\r\n    }, [comments, commentsDidCall, setCommentsDidCall]);\r\n\r\n     return <React.Fragment>{comments.map((item, index) => {\r\n        return <Tweet\r\n            comments={comments}\r\n            className=\"my-5 py-5 border bg-white text-dark\"\r\n            key={`${index}-{item.id}`}/>\r\n    })}</React.Fragment>\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {TweetList} from \"./list\";\r\nimport {TweetCreate} from \"./create\";\r\nimport {apiTweetDetail, apiTweetList, apiCommentList, apiTweetFeed} from \"./lookup\"\r\nimport {Tweet} from \"./detail\";\r\nimport {FeedList} from \"./feed\";\r\n\r\nexport function FeedComponent(props) {\r\n    const canTweet = props.canTweet !== \"false\";\r\n\r\n    const [newTweets, setNewTweet] = useState([]);\r\n    const handleNewTweet =\r\n        (newTweet) => {\r\n            console.log(\"new tweet\", [...newTweets]);\r\n            let tempNewTweet = [...newTweets];\r\n            tempNewTweet.unshift(newTweet);\r\n            setNewTweet(tempNewTweet);\r\n        };\r\n    console.log(\"component\");\r\n    return <div className={props.className}>\r\n        {(canTweet === true) && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3'/>}\r\n        <FeedList newTweet={newTweets} {...props}/>\r\n    </div>\r\n}\r\n\r\nexport function TweetComponent(props) {\r\n    console.log(props);\r\n    const canTweet = props.canTweet !== \"false\";\r\n\r\n    const [newTweets, setNewTweet] = useState([]);\r\n    const handleNewTweet =\r\n        (newTweet) => {\r\n            console.log(\"new tweet\", [...newTweets]);\r\n            let tempNewTweet = [...newTweets];\r\n            tempNewTweet.unshift(newTweet);\r\n            setNewTweet(tempNewTweet);\r\n        };\r\n    console.log(\"component\");\r\n    return <div className={props.className}>\r\n        {(canTweet === true) && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3'/>}\r\n\r\n        <TweetList newTweet={newTweets} {...props}/>\r\n    </div>\r\n}\r\n\r\nexport function TweetDetailComponent(props) {\r\n    const {tweetId} = props;\r\n    const [didLookup, setDidLookUp] = useState(false);\r\n    const [tweet, setTweet] = useState(null);\r\n    const handleBackendLookUp = (response, status) => {\r\n        if (status === 200) {\r\n            console.log(\"set tweet\", response);\r\n            setTweet(response)\r\n        } else {\r\n            alert(\"There was an error finding your tweet! TweetDetailComponent!\")\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        if (didLookup === false) {\r\n            apiTweetDetail(tweetId, handleBackendLookUp);\r\n            setDidLookUp(true)\r\n        }\r\n    }, [tweetId, didLookup, setDidLookUp]);\r\n    return tweet === null ? null : <Tweet tweet={tweet}\r\n                                          className={props.className}/>\r\n}\r\n\r\n\r\nexport function CommentComponent(props) {\r\n    const [comments, setComments] = useState([]);\r\n    const [didLookup, setDidLookUp] = useState(false);\r\n    useEffect(() => {\r\n            const myCallBack = (response, status) => {\r\n                console.log(\"username:\", response, status);\r\n                if (status === 200) {\r\n                    setComments(response)\r\n                }\r\n            };\r\n            apiCommentList(276, myCallBack)\r\n        }\r\n    );\r\n    return comments === null ? <div className='border-dark border'><p>not success call</p></div> :\r\n        <div className='border-dark border'><p>{comments.map((item, index) => {\r\n            return <li>{item.content}, userid: {item.user}</li>\r\n        })} perfect nha</p></div>\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {FeedComponent,TweetComponent, TweetDetailComponent} from \"./tweets\";\nimport {ProfileBadgeComponent} from \"./profile\";\nimport {CommentComponent} from \"./tweets/tweet_components\";\n\n\nconst appEl = document.getElementById(\"root\");\nif (appEl) {\n    ReactDOM.render(\n        <React.StrictMode>\n            <CommentComponent />\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n}\n\nconst e = React.createElement;\nconst tweetEl = document.getElementById(\"tweetme-2\");\nif (tweetEl) {\n    ReactDOM.render(e(TweetComponent, tweetEl.dataset), tweetEl);\n}\n\nconst tweetFeedEl = document.getElementById(\"tweetme-2-feed\");\nif (tweetFeedEl) {\n    ReactDOM.render(e(FeedComponent, tweetFeedEl.dataset), tweetFeedEl);\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-2-detail\");\ntweetDetailElements.forEach(container =>{\n    ReactDOM.render(e(TweetDetailComponent, container.dataset), container);\n});\n\n\nconst userProfileBadgeElements = document.querySelectorAll(\".tweetme-2-profile-badge\");\nuserProfileBadgeElements.forEach(container =>{\n    ReactDOM.render(e(ProfileBadgeComponent, container.dataset), container);\n});\n\n\nconst userCommentElements = document.querySelectorAll(\".tweetme-2-comment\");\nuserCommentElements.forEach(container =>{\n    ReactDOM.render(e(CommentComponent, container.dataset), container);\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}